name: Release x64

on:
  push:
     tags:
      - v[0-9]+.*

env:
  USE_HARD_LINKS: false

jobs:
  # the create-release would be used once we want to create a specific release based on if the commit has a tag
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/create-gh-release-action@v1
        env:
          # (required)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  # upload the app package for each target os
  build-binaries:
    strategy:
      #fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      # Fetch source code
      - name: Fetch source code
        uses: actions/checkout@v2
      # Install WASM
      - name: Install WASM
        shell: bash
        run: |
          rustup target install wasm32-unknown-unknown
      # Build WASM
      - name: Build WASM
        run: |
          cargo build --release --target wasm32-unknown-unknown
      # Install nodejs dependencies
      - name: Install nodejs dependencies
        run: |
          npm install
      # build webcomponents
      #- name: build webcomponents
      #  shell: bash
      #  run: |
      #    npm run build:webcomponents
      # list root folder
      - name: list root folder
        continue-on-error: true
        run: ls
        working-directory: ./
      # upload binary for each platform
      - name: upload binary (ubuntu only)
        if: ${{ runner.os == 'Linux' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${GITHUB_REF#refs/tags/}" "target/wasm32-unknown-unknown/release/agent_directory.wasm" --clobber
      - name: upload binary (macos only)
        if: ${{ runner.os == 'macOs' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ls
      - name: upload binary (Windows only)
        if: ${{ runner.os == 'Windows' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |       
          ls
